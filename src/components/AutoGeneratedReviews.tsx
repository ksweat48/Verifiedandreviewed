import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { Bot, Zap, MapPin, Clock, Eye } from 'lucide-react';
import ImageGallery from './ImageGallery';

interface AutoGeneratedReview {
  id: string;
  title: string;
  slug: string;
  businessName: string;
  category: string;
  rating: number;
  location: string;
  excerpt: string;
  featuredImage: string;
  gallery: string[];
  publishDate: string;
  isAutoGenerated: boolean;
  originalReview: {
    text: string;
    rating: number;
    date: string;
  };
}

const AutoGeneratedReviews = () => {
  const navigate = useNavigate();
  const [reviews, setReviews] = useState<AutoGeneratedReview[]>([]);
  const [loading, setLoading] = useState(false);

  useEffect(() => {
    loadAutoGeneratedReviews();
  }, []);

  const loadAutoGeneratedReviews = () => {
    // Load from localStorage or API
    const savedReviews = localStorage.getItem('auto_generated_reviews');
    try {
      if (savedReviews) {
        setReviews(JSON.parse(savedReviews));
        return;
      }
    } catch (error) {
      console.error('Error parsing saved reviews:', error);
    }
    
    // If no saved reviews or error parsing, use mock data
      // Mock data for demonstration
      const mockReviews: AutoGeneratedReview[] = [
        {
          id: 'auto-1',
          title: 'Green Garden Cafe Review',
          slug: 'green-garden-cafe-auto-review',
          businessName: 'Green Garden Cafe',
          category: 'Healthy Restaurant',
          rating: 5,
          location: 'Downtown Seattle',
          excerpt: 'Fresh ingredients and spotless facilities make this a standout healthy dining option...',
          featuredImage: 'https://images.pexels.com/photos/1640777/pexels-photo-1640777.jpeg?auto=compress&cs=tinysrgb&w=400',
          gallery: [
            'https://images.pexels.com/photos/1640777/pexels-photo-1640777.jpeg?auto=compress&cs=tinysrgb&w=400',
            'https://images.pexels.com/photos/1092730/pexels-photo-1092730.jpeg?auto=compress&cs=tinysrgb&w=400'
          ],
          publishDate: new Date().toISOString(),
          isAutoGenerated: true,
          originalReview: {
            text: 'Amazing fresh ingredients and spotless facilities. The quinoa bowl was perfect.',
            rating: 5,
            date: new Date().toISOString()
          }
        },
        {
          id: 'auto-2',
          title: 'Ocean Breeze Cafe Review',
          slug: 'ocean-breeze-cafe-auto-review',
          businessName: 'Ocean Breeze Cafe',
          category: 'Restaurant',
          rating: 4,
          location: 'Miami Beach',
          excerpt: 'Excellent seafood with ocean views, though service can be slow during peak hours...',
          featuredImage: 'https://images.pexels.com/photos/164595/pexels-photo-164595.jpeg?auto=compress&cs=tinysrgb&w=400',
          gallery: [
            'https://images.pexels.com/photos/164595/pexels-photo-164595.jpeg?auto=compress&cs=tinysrgb&w=400'
          ],
          publishDate: new Date(Date.now() - 86400000).toISOString(),
          isAutoGenerated: true,
          originalReview: {
            text: 'Great seafood and beautiful ocean view. Service was a bit slow but worth the wait.',
            rating: 4,
            date: new Date(Date.now() - 86400000).toISOString()
          }
        }
      ];
      setReviews(mockReviews);
  };

  const handleReviewClick = (slug: string) => {
    navigate(`/post/${slug}`);
  };

  const generateMoreContent = async () => {
    setLoading(true);
    
    try {
      // Simulate API call to generate more content
      await new Promise(resolve => setTimeout(resolve, 2000));
      
      // Add new mock review
      const newReview: AutoGeneratedReview = {
        id: `auto-${Date.now()}`,
        title: 'Fresh Market Co-op Review',
        slug: 'fresh-market-coop-auto-review',
        businessName: 'Fresh Market Co-op',
        category: 'Retail & Grocery',
        rating: 4,
        location: 'Portland, OR',
        excerpt: 'Excellent selection of organic produce with knowledgeable staff and clean facilities...',
        featuredImage: 'https://images.pexels.com/photos/264636/pexels-photo-264636.jpeg?auto=compress&cs=tinysrgb&w=400',
        gallery: [
          'https://images.pexels.com/photos/264636/pexels-photo-264636.jpeg?auto=compress&cs=tinysrgb&w=400'
        ],
        publishDate: new Date().toISOString(),
        isAutoGenerated: true,
        originalReview: {
          text: 'Great selection of organic produce and local products. Clean, well-organized store.',
          rating: 4,
          date: new Date().toISOString()
        }
      };

      setReviews(prev => [newReview, ...prev]);
      localStorage.setItem('auto_generated_reviews', JSON.stringify([newReview, ...reviews]));
      
    } catch (error) {
      console.error('Failed to generate content:', error);
    } finally {
      setLoading(false);
    }
  };

  if (reviews.length === 0) {
    return (
      <section className="py-12 bg-neutral-50">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center">
            <div className="w-16 h-16 bg-purple-100 rounded-full flex items-center justify-center mx-auto mb-4">
              <Bot className="h-8 w-8 text-purple-600" />
            </div>
            <h2 className="font-cinzel text-2xl md:text-3xl font-bold text-neutral-900 mb-4">
              AI-Generated Reviews
            </h2>
            <p className="font-lora text-neutral-600 mb-6">
              No auto-generated content yet. Enable the automated content system to see AI-powered reviews here.
            </p>
            <button
              onClick={generateMoreContent}
              disabled={loading}
              className={`font-poppins px-6 py-3 rounded-lg font-semibold transition-colors duration-200 flex items-center mx-auto ${
                loading
                  ? 'bg-neutral-300 text-neutral-600 cursor-not-allowed'
                  : 'bg-purple-500 text-white hover:bg-purple-600'
              }`}
            >
              {loading ? (
                <>
                  <Bot className="h-5 w-5 mr-2 animate-pulse" />
                  Generating Content...
                </>
              ) : (
                <>
                  <Zap className="h-5 w-5 mr-2" />
                  Generate Sample Content
                </>
              )}
            </button>
          </div>
        </div>
      </section>
    );
  }

  return (
    <section className="py-12 bg-neutral-50">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="flex items-center justify-between mb-8">
          <div>
            <h2 className="font-cinzel text-2xl md:text-3xl font-bold text-neutral-900 mb-2 flex items-center">
              <Bot className="h-8 w-8 mr-3 text-purple-600" />
              AI-Generated Reviews
            </h2>
            <p className="font-lora text-neutral-600">
              Fresh content automatically generated from Google Business reviews
            </p>
          </div>
          
          <button
            onClick={generateMoreContent}
            disabled={loading}
            className={`font-poppins px-4 py-2 rounded-lg font-semibold transition-colors duration-200 flex items-center ${
              loading
                ? 'bg-neutral-300 text-neutral-600 cursor-not-allowed'
                : 'bg-purple-500 text-white hover:bg-purple-600'
            }`}
          >
            {loading ? (
              <>
                <Bot className="h-4 w-4 mr-2 animate-pulse" />
                Generating...
              </>
            ) : (
              <>
                <Zap className="h-4 w-4 mr-2" />
                Generate More
              </>
            )}
          </button>
        </div>

        <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
          {reviews.map((review) => (
            <div
              key={review.id}
              className="bg-white rounded-xl shadow-sm border border-neutral-200 overflow-hidden hover:shadow-md transition-all duration-300 cursor-pointer"
              onClick={() => handleReviewClick(review.slug)}
            >
              <div className="relative">
                <img
                  src={review.featuredImage}
                  alt={review.businessName}
                  className="w-full h-48 object-cover"
                />
                
                {/* AI Generated Badge */}
                <div className="absolute top-3 left-3 bg-purple-500 text-white rounded-full px-3 py-1 flex items-center">
                  <Bot className="h-3 w-3 mr-1" />
                  <span className="font-poppins text-xs font-bold">AI GENERATED</span>
                </div>

                {/* Rating */}
                <div className="absolute top-3 right-3 bg-white bg-opacity-90 rounded-full px-2 py-1 flex items-center">
                  <Star className="h-3 w-3 text-yellow-400 fill-current mr-1" />
                  <span className="font-poppins text-xs font-bold text-neutral-700">
                    {review.rating}
                  </span>
                </div>
              </div>

              <div className="p-4">
                <div className="mb-2">
                  <span className="font-poppins text-xs text-purple-500 font-semibold uppercase tracking-wide">
                    {review.category.replace('-', ' ')}
                  </span>
                </div>

                <h3 className="font-poppins text-sm font-semibold text-neutral-900 mb-1 line-clamp-1">
                  {review.businessName}
                </h3>

                <div className="flex items-center text-neutral-500 mb-2">
                  <MapPin className="h-3 w-3 mr-1" />
                  <span className="font-lora text-xs truncate">{review.location}</span>
                </div>

                <p className="font-lora text-xs text-neutral-600 leading-relaxed line-clamp-2 mb-3">
                  {review.excerpt}
                </p>

                {/* Gallery Preview */}
                {review.gallery.length > 1 && (
                  <div className="mb-3">
                    <div className="flex gap-1">
                      {review.gallery.slice(0, 3).map((image, index) => (
                        <img
                          key={index}
                          src={image}
                          alt={`${review.businessName} ${index + 1}`}
                          className="w-12 h-12 object-cover rounded"
                        />
                      ))}
                      {review.gallery.length > 3 && (
                        <div className="w-12 h-12 bg-neutral-100 rounded flex items-center justify-center">
                          <span className="font-poppins text-xs text-neutral-600">
                            +{review.gallery.length - 3}
                          </span>
                        </div>
                      )}
                    </div>
                  </div>
                )}

                <div className="flex items-center justify-between text-xs text-neutral-400">
                  <div className="flex items-center">
                    <Clock className="h-3 w-3 mr-1" />
                    <span className="font-lora">
                      {new Date(review.publishDate).toLocaleDateString()}
                    </span>
                  </div>
                  <div className="flex items-center">
                    <Eye className="h-3 w-3 mr-1" />
                    <span className="font-poppins">Read More</span>
                  </div>
                </div>
              </div>
            </div>
          ))}
        </div>

        {/* Load More Button */}
        <div className="text-center mt-8">
          <button 
            onClick={generateMoreContent}
            disabled={loading}
            className={`font-poppins px-6 py-2 rounded-lg font-medium transition-colors duration-200 text-sm flex items-center mx-auto ${
              loading
                ? 'bg-neutral-300 text-neutral-600 cursor-not-allowed'
                : 'bg-neutral-600 text-white hover:bg-neutral-700'
            }`}
          >
            {loading ? (
              <>
                <Bot className="h-4 w-4 mr-2 animate-pulse" />
                Generating More Content...
              </>
            ) : (
              'Load More AI Reviews'
            )}
          </button>
        </div>
      </div>
    </section>
  );
};

export default AutoGeneratedReviews;